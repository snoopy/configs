[core]
excludesFile = ~/.gitglobalignore
autocrlf = false
# ignore file mode changes (set locally)
# git config core.filemode false

# use diff-highlight usually located at /usr/share/doc/git/contrib/diff-highlight/
[pager]
log = diff-highlight | less
show = diff-highlight | less
diff = diff-highlight | less
[interactive]
diffFilter = diff-highlight

[push]
# only push when the current branch is tracking origin branch of same name
default = simple

[merge]
conflictstyle = diff3

[diff]
colorMoved = default
algorithm = histogram

[alias]
git = !git

s = status --short --branch

cloner = clone --recurse-submodules

co = checkout
col = checkout -

a = add
aa = add -A
ai = add --interactive
ap = add -p

del = clean -dfx

rs = restore --staged
rh = reset --hard
rk = reset --hard HEAD
drop = reset --hard HEAD~1
pop = reset HEAD~1

cp = "!GIT_COMMITTER_DATE=$(date --utc +%Y-%m-%dT%H:%M:%S%z) git cherry-pick"
cpc = !git cp --continue
cpa = !git cp --abort

c = "!GIT_COMMITTER_DATE=$(date --utc +%Y-%m-%dT%H:%M:%S%z) git commit --date=$(date --utc +%Y-%m-%dT%H:%M:%S%z)"
cr = !git c --amend
cm = !git c -m
cn = !git c --amend --no-edit
cc = !git c -a --amend -C HEAD
ca = !git c -a
cinit = !git c --allow-empty --message 'init'

p = push
pf = push -f
pn = push --set-upstream origin HEAD

fa = "!f() { git fetch --all --no-tags --prune && git s; }; f"
fat = "!f() { git fetch --all --tags --prune && git s; }; f"

m = "!GIT_COMMITTER_DATE=$(date --utc +%Y-%m-%dT%H:%M:%S%z) git merge"
ff = pull --ff-only
ffu = pull --ff-only upstream HEAD
ffm = !git m --ff-only

b = branch --sort=-committerdate --format="%(color:yellow)%(objectname)\\ %(color:reset)%(committerdate:short)\\ %(align:width=30,position=left)%(color:magenta)%(committerdate:relative)%(end)%(color:reset)%(if)%(HEAD)%(then)%(color:green)%(HEAD)%(end)%(refname:short)%(if)%(upstream)%(then)\\ %(color:blue)[%(upstream:short)]%(color:red)%(upstream:track)%(end)"
br = !git b -r
buu = branch --unset-upstream
bsu = branch --set-upstream-to
bm = branch -m
bd = branch -D
bdr = push origin --delete
bc = switch -c
be = branch --merged
bf = branch --contains

rbi = "!GIT_COMMITTER_DATE=$(date --utc +%Y-%m-%dT%H:%M:%S%z) git rebase -i"
rbc = rebase --continue
rbs = rebase --skip
rba = rebase --abort
rbn = "!f() { git rbi HEAD~$1; }; f"

rmtv = remote -v
rmta = remote add
rmtr = remote rm
rmtu = remote set-url
rmtap = remote set-url --add --push #<remote> <url>

sma = submodule add
smu = submodule update --remote --merge
smi = submodule update --init

cfgu = config user.name
cfgm = config user.email

w = show

adog = log --all --decorate --oneline --graph
customlog = log --pretty=format:"%C(yellow)%H\\ %C(auto)%ad\\ %C(magenta)%<(10,trunc)%ar\\ %C(blue)%<(15,trunc)%an\\ %C(reset)%s\\ %C(auto)%d"
ln = !git customlog --date=format-local:'%Y-%m-%d %H:%M' --no-merges
l = !git customlog --date=format-local:'%Y-%m-%d %H:%M'
lf = !git l --name-status --no-merges
lfr = log --name-status --diff-filter=R --follow
lfa = log --name-status --diff-filter=A --follow
lfd = log --name-status --diff-filter=D --follow
lfra = !git l --name-status --diff-filter=R
lfaa = !git l --name-status --diff-filter=A
lfda = !git l --name-status --diff-filter=D
ld = !git l -p --no-merges
ll = log -1 --name-status --pretty=fuller
lr = log -g --pretty=oneline
# show commits by message
lm = !git l -i --grep
# show commits by author
la = !git l -i --author
# show commits where diff matches regex (shows moves unlike -S)
lg = !git l -G
# show who committed
lw = shortlog -e -s
le = log --pretty=fuller
le = log --pretty=fuller
li = !git l ..@{upstream}
lid = !git l -p ..@{upstream}
lif = !git l --name-status ..@{upstream}
lo = !git l @{upstream}..
lod = !git l -p @{upstream}..
lof = !git l --name-status @{upstream}..
lch = cherry -v
lchmod = !sh -c 'git l --summary | grep \"mode change\" -B 1|less'

count = rev-list --count

t = tag -l --sort=-committerdate --format="%(color:yellow)%(objectname)\\ %(color:reset)%(committerdate:short)\\ %(align:width=30,position=left)%(color:magenta)%(committerdate:relative)%(end)%(color:reset)%(refname:short)"
ti = describe --tags
td = tag -d
tda = "!f() { git tag -d $(git tag -l); }; f"
tdr = push origin --delete
tp = push --tags

fn = "!git ls-files | grep -i"
fc = grep -n -Ii --break

d = diff
dc = diff --cached
dw = diff --color-words=.
dl = log -1 -p --no-merges
# show merge conflicts
dmc = diff --name-only --diff-filter=U

sl = stash list
ss = stash push
sp = stash pop
sa = stash apply
sd = stash drop
sc = stash clear
