[core]
excludesFile = ~/.gitglobalignore
autocrlf = false
# ignore file mode changes (set locally)
# git config core.filemode false

# https://github.com/dandavison/delta/releases
[core]
pager = delta
[interactive]
diffFilter = delta --color-only
[delta]
syntax-theme = none
line-numbers = true
navigate = true
word-diff-regex = .
plus-style = '"#008700" normal'
plus-emph-style = '"#121212" "#008700"'
minus-style = '"#E7595A" normal'
minus-emph-style = '"#121212" "#E7595A"'

[push]
# only push when the current branch is tracking origin branch of same name
default = simple

[merge]
conflictstyle = diff3

[diff]
colorMoved = default
algorithm = histogram

[alias]
git = !git

s = status --short --branch
si = status --short --branch --ignored

cl = clone
cla = clone --recurse-submodules
cls = clone --depth 1

co = checkout
col = checkout -

a = add
aa = add --all
ae = add --edit
ai = add --interactive
ap = add --patch

scrub = clean -df
# -x also removes files that are ignored
purge = clean -dfx

rs = restore --staged
rw = restore --worktree --patch
rh = reset --hard
rk = reset --hard HEAD
drop = reset --hard HEAD~1
pop = reset HEAD~1

cp = "!GIT_COMMITTER_DATE=$(date --utc +%Y-%m-%dT%H:%M:%S%z) git cherry-pick"
cpc = !git cp --continue
cpa = !git cp --abort

c = "!GIT_COMMITTER_DATE=$(date --utc +%Y-%m-%dT%H:%M:%S%z) git commit --date=$(date --utc +%Y-%m-%dT%H:%M:%S%z)"
cr = !git c --amend
cm = !git c --message
cs = !git c --amend --no-edit
csa = !git c --all --amend -C HEAD
ca = !git c --all
cam = !git c --all --message
cinit = !git c --allow-empty --message 'init'

p = push
pf = push --force
pn = push --set-upstream origin HEAD

fa = "!f() { git fetch --all --no-tags --prune && git s; }; f"
fat = "!f() { git fetch --all --tags --prune && git s; }; f"

m = "!GIT_COMMITTER_DATE=$(date --utc +%Y-%m-%dT%H:%M:%S%z) git merge"
ff = pull --ff-only --no-tags
ffu = pull --ff-only upstream HEAD
ffm = !git m --ff-only
ffb = "!f() { git fetch origin $1:$1; }; f"

b = branch --sort=-committerdate --format="%(color:yellow)%(objectname)\\ %(color:reset)%(committerdate:short)\\ %(align:width=30,position=left)%(color:magenta)%(committerdate:relative)%(end)%(color:reset)%(if)%(HEAD)%(then)%(color:green)%(HEAD)%(end)%(refname:short)%(if)%(upstream)%(then)\\ %(color:blue)[%(upstream:short)]%(color:red)%(upstream:track)%(end)"
br = !git b --remotes
buu = branch --unset-upstream
bsu = branch --set-upstream-to
bm = branch --move
bd = branch --delete --force
bdr = push origin --delete
bc = switch --create
be = branch --merged
bf = branch --contains

rbi = "!GIT_COMMITTER_DATE=$(date --utc +%Y-%m-%dT%H:%M:%S%z) git rebase -i"
rbc = rebase --continue
rbs = rebase --skip
rba = rebase --abort
rbn = "!f() { git rbi HEAD~$1; }; f"

rmtv = remote --verbose
rmta = remote add
rmtr = remote rm
rmtu = remote set-url
rmtap = remote set-url --add --push #<remote> <url>

sma = submodule add
smu = submodule update --remote --merge
smi = submodule update --init

cfgu = config user.name
cfgm = config user.email

w = show

adog = log --all --decorate --oneline --graph
customlog = log --date-order --pretty=format:"%C(yellow)%H\\ %C(auto)%cd\\ %C(magenta)%<(10,trunc)%cr\\ %C(blue)%<(15,trunc)%an\\ %C(reset)%s\\ %C(auto)%d"
ln = !git customlog --date=format:'%Y-%m-%d %H:%M' --no-merges
l = !git customlog --date=format:'%Y-%m-%d %H:%M'
lp = !git customlog --date=format:'%Y-%m-%d %H:%M' --topo-order
lf = !git l --name-status --no-merges
lfr = log --name-status --diff-filter=R --follow
lfa = log --name-status --diff-filter=A --follow
lfd = log --name-status --diff-filter=D --follow
lfra = !git l --name-status --diff-filter=R
lfaa = !git l --name-status --diff-filter=A
lfda = !git l --name-status --diff-filter=D
ld = !git l --patch --no-merges
ll = log -1 --name-status --pretty=fuller
lr = log --walk-reflogs --pretty=oneline
# show commits by message
lm = !git l --regexp-ignore-case --grep
# show commits by author
la = !git l --regexp-ignore-case --author
# show commits where diff matches regex (shows moves unlike -S)
lg = !git l -G
ls = !git l -S
# show who committed
lw = shortlog --email --summary
le = log --pretty=fuller
li = !git l ..@{upstream}
lid = !git l --patch ..@{upstream}
lif = !git l --name-status ..@{upstream}
lo = !git l @{upstream}..
lod = !git l --patch @{upstream}..
lof = !git l --name-status @{upstream}..
lch = cherry -v
lchmod = !sh -c 'git l --summary | grep \"mode change\" -B 1|less'

count = rev-list --count

t = tag --list --sort=-committerdate --format="%(color:yellow)%(objectname)\\ %(color:reset)%(committerdate:short)\\ %(align:width=30,position=left)%(color:magenta)%(committerdate:relative)%(end)%(color:reset)%(refname:short)"
tr = ls-remote --tags origin
ti = describe --tags
td = tag --delete
tda = "!f() { git tag -d $(git tag -l); }; f"
tdr = push origin --delete
tp = push --tags

ls = ls-files

g = grep --line-number -I --ignore-case --heading --break
gw = grep --line-number -I --ignore-case --heading --break --word-regexp
gl = "!git ls-files --others | grep --ignore-case"
glw = "!git ls-files --others | grep --ignore-case --word-regexp"

d = diff
dc = diff --cached
dw = diff --color-words=.
dl = log -1 --patch --no-merges
# show merge conflicts
dmc = diff --check

sl = stash list
ss = stash push
sp = stash pop
sa = stash apply
sd = stash drop
sc = stash clear
